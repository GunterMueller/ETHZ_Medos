A c
1.  Introduction
C  Y15 c
Leo Geissmann  15.5.82, rev. 7.10.82
+
The 1Lilith0 computer is intended to be used as a flexible workstation by individual users.  This guide will give an introduction to the use of the machine and the basic software environment running on it.

The readers of the handbook are 1invited0 to report detected errors to the authors.  Any comments on content and style are also welcome.
B Y20
1.1.  Handbook Organization
+
As the range of users spans from the non-programmer, who wants only to execute already existing programs, to the active (system-) programmer, who designs and implements new programs and thereby extends the computer's capabilities, this guide is compiled such that general information is given at the beginning and more specific information toward the end.  This allows the 1non-programmer0 to stop reading after chapter 6.
C Y15
1.1.1.  Overview of the Chapters
+ t110.
1Chapter 10  gives introductional comments on the handbook and on Lilith.

1Chapter 20  gives instructions on how Lilith is started.

1Chapter 30  describes how programs are called with the command interpreter.  

1Chapter 40  provides information about the general behaviour of programs.

1Chapter 50  describes the use of the text editor.

1Chapter 60  is a collection of important utility programs, needed by all Lilith users.

1Chapter 70  describes the use of the Modula-2 compiler.

1Chapter 80  describes the use of the post-mortem debugger.

1Chapter 90  is a collection of library modules constituting the Medos-2 interface.

1Chapter 100  is a collection of library modules constituting the screen software interface.

1Chapter 110  is a collection of further commonly used library modules.

1Chapter 120  describes the Lilith-specific features of Modula-2.

1Chapter 130  describes procedures to follow if Lilith is not working as expected.

1Chapter 140  is a collection of application programs.
C Y15
1.1.2.  Page Numbers
+
It is intended that the page numbers facilitate the use of the handbook.  It should be possible to find a chapter quickly, because the chapter number is encoded within the page number.  The pages belonging to a chapter are enumerated in the 1thousends digit0 of the chapter number, i.e. in the first chapter the page numbers start with 1001, in the second chapter with 2001, etc.  As a chapter has less than one hundred pages, the chapter number is always separated from actual page number within the chapter by a zero.
p B Y20
1.2.  Overview of Lilith
C Y15
1.2.1.  Software
+
Lilith is programmed in the language 1Modula-20, which is defined in the Modula-2 manual [1].  Some specialities of Modula-2 on Lilith are mentioned in chapter 12 of this handbook.

The resident operating system on Lilith is called 1Medos-20.  It is responsible for program execution and general memory allocation.  It also provides a general interface for input/output on files and to the terminal.

One of the most frequently used program is the 1text editor0.  It is used for writing and modifying text and programs.  Programmers also need the Modula-2 1compiler0 and, in the case that program execution should fail, the post-mortem 1debugger0.

The handling of the screen display is provided by the 1screen software0 package.  It enables writing and drawing at any place on the screen.  A window handler provides the subdivision of the screen into smaller independent parts, called 1windows0.

Further, there exists a large number of utility programs and library modules.  The most commonly used subset is described in this handbook; the handbook should never be considered to give a complete overview of the Lilith software.
C Y15
1.2.2.  Hardware
+
The 1Lilith0 computer consists of a processing unit, which includes the main store, peripheral devices, and a power supply.  The store has a capacity of 128K (131'072) 1words0 of 16 bits each.  The standard peripheral devices are a 1display0 for visual output, a 1keyboard0 and a so-called 1mouse0 for manual input.  Furthermore, there is a secondary store consisting of a 1magnetic cartridge disk0 with a capacity of 10 MByte.  It is used to store and retain files.  A description of Lilith is given in the Lilith report [2].

The display uses the raster scan technique with 592 lines and 768 dots per line.  The total number of dots is 454'656, and each dot is represented in the main store by a bit.  This representation is called the 1bitmap0; if the full screen is represented, it occupies 28'416 words.  The display controller allows to reduce the bitmap's size and to use part of the screen only, or even to discard it altogether.

The direct representation of the screen as a bitmap gives the programmer a high degree of  freedom for manipulation of the displayed information.  Diagrams and pictures can be shown  as well as text.  In fact, each character of a text is a picture itself, represented by an array of bits computed by the program from the character's internal (ASCII) encoding.  This offers the possibility to use different visual styles (i.e. 1fonts0) for characters.

The keyboard uses the standard ASCII character set with 96 printing characters (plus a few extra keys for control characters, which may be ignored for almost all uses).  The mouse allows movements of the user's hand holding the  mouse to be read by the processor.  These  movements can be translated by appropriate programs into corresponding movements of a cursor displayed on the screen.  The mouse also features three pushbuttons (keys) used to indicate commands.

In addition, the computer also provides a standard 1serial line interface0 (V24, RS232).  It can be used to connect to printer terminals or other devices, including of course other computers.
B Y20
1.3.  References
+ t75.
2[1]  Programming in Modula-20
       N. Wirth,  Springer-Verlag, Heidelberg, NewYork,  1982.

2[2]  The personal computer Lilith0
       N. Wirth,  in
       -  Sofware Development Environments,  A.I. Wassermann, Ed.,  IEEE Computer Society Press,  1981.
       -  Proc. 5th International Conf. on Software Engineering,  IEEE Computer Society Press,  1981.
