(***************************************************************
***         Input-Output-Handling / Part of                  ***
***         MIA / Version 19 / 20.07.81 / G. Schild          ***
***         MIA / Version 20 /  9.4.82 / W. Winiger          ***
***************************************************************)

DEFINITION MODULE TextIO;

FROM LongFiles IMPORT LongFileName;

EXPORT QUALIFIED GetLine, WriteList, LineCount,
                 Print, PrintChar, NewPage, PutHex, SkipPage,
                 Error, Erratum, ErrorList, ErrorNotes, Correct,
                 eol, fullPage, lineSize;

CONST eol      = 36C;
      fullPage = 64;
      lineSize = 90;

PROCEDURE GetLine (VAR l: ARRAY OF CHAR; VAR itIsOver: BOOLEAN);
(* get a line, that is the mneumonics for one micro instruction,
from the input *)

PROCEDURE WriteList (VAR name: LongFileName);
(* if mia hasn't seen any errors, then a large listing is
generated, which is well formated for printing. otherwise
a listing without the hexadecimal code is generated *)



PROCEDURE Print(l:ARRAY OF CHAR);
(* print one line on the listing *)

PROCEDURE PrintChar(ch:CHAR);
(* print one character on the listing *)

PROCEDURE NewPage;
(* only used to structure the listing *)

PROCEDURE PutHex(n:CARDINAL;VAR res:ARRAY OF CHAR);
(* give the hexadecimal characterwise representation
(left side filled with blanks) of the cardinal n *)

PROCEDURE SkipPage;
(* Skip to the next page *)


PROCEDURE Error(n,colnr:CARDINAL);
(* mark an error, just detected, with an arrow and a number *)

PROCEDURE Erratum(n:CARDINAL);
(* remember that the  error number n was made *)

PROCEDURE ErrorList;
(* print the line with the arrow and the errornumber *)

PROCEDURE ErrorNotes;
(* add a list of made errors *)



PROCEDURE LineCount():CARDINAL;
(* return the number of lines printed on the actuel page *)

PROCEDURE Correct():BOOLEAN;
(* indicate a correct assembly run *)

END TextIO.
