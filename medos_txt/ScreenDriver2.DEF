DEFINITION MODULE ScreenDriver2;   (* Ch. Jacobi 25.10.81; modified 12.6.82 *)
  FROM SYSTEM IMPORT WORD;
  EXPORT QUALIFIED
    BitmapDescriptor, 
    maxHeight, maxWidth, BlockDescriptor,
    sysBMD, sysBMA, sysF,

    WriteProc,
    bitmapHint, fontHint, 
    charH, charWmax, charWmin,
    ShowBm,
    absWindow, absLine,
    
    WriteChar, ClearChars, FontDefaults,

    FreeProc, GetPosProc, SetPosProc, ClearProc, ScreenProc, 
    TextProcRecord, DefaultsRecord, 
    actualProcRec, actualDefaultsRec,
    SetProcRec, SetDefaultRec;


  TYPE
    BlockDescriptor =
        RECORD
          x, y, w, h: CARDINAL;
        END;

    BitmapDescriptor =
      RECORD
        bAdr:       CARDINAL;
        bwidth:     CARDINAL;
        bheigth:    CARDINAL;
        bposition:  CARDINAL;
      END;

  (* drives constant resources; read only *)
  VAR
    maxHeight: CARDINAL;            (*never modifyed*)
    maxWidth:  CARDINAL;            (*never modifyed*)
    sysBMD:    BitmapDescriptor;
    sysBMA:    CARDINAL;            (*frame pointer; never modifyed*)
    sysF:      CARDINAL;            (*frame pointer; never modifyed;
                                      points to firm font; behind 4 word header*)

  (* drives default resources; read-write *)
  VAR
    bitmapHint: CARDINAL; (*pointer to the BMD; [default bitmap]*)
    fontHint:   CARDINAL; (*frame pointer to firmware font; [default font]; 
                            behind 4 word descriptor; use FontDefaults to modify*)
    absWindow:  BlockDescriptor;         (*size of default bitmap*)
    absLine:    BlockDescriptor;         (*current position*)
    charH, charWmax, charWmin: CARDINAL; (*of the default font*)

  (*only for Screen Software*)


  PROCEDURE ShowBm(bmd: BitmapDescriptor);

  PROCEDURE WriteChar(ch: CHAR);
  PROCEDURE ClearChars(n: CARDINAL);

  PROCEDURE FontDefaults(fa: CARDINAL); 
    (* fa points to firmware font; behind 4 word descriptor; sets fontHint;
       sets charH, charWmax, charWmin; checks absLine to be valid;
       call this procedure also after modifying the default bitmap [absWndow] *)

  (* to drive TextScreen versus WindowHandler*)

  TYPE WriteProc =  PROCEDURE(CHAR);
       FreeProc =   PROCEDURE(): CARDINAL;
       GetPosProc = PROCEDURE(VAR CARDINAL, VAR CARDINAL);
       SetPosProc = PROCEDURE(CARDINAL, CARDINAL);
       ClearProc =  PROCEDURE(CARDINAL);
       ScreenProc = PROCEDURE(VAR WORD);

       TextProcRecord =
         RECORD
           write:      WriteProc; 
           freeLines:  FreeProc; 
           freeChars:  FreeProc;
           getPos:     GetPosProc;
           setPos:     SetPosProc;
           clearChars: ClearProc;
           clearLines: ClearProc;
           windowHandler: BOOLEAN;
         END;

       DefaultsRecord = 
         RECORD         
           getDefaultFont:   ScreenProc; 
           setDefaultFont:   ScreenProc; 
           getDefaultBitmap: ScreenProc;
           setDefaultBitmap: ScreenProc;
           getDotPos:  GetPosProc;
           setDotPos:  SetPosProc;
         END;

  PROCEDURE SetProcRec(VAR r: TextProcRecord); 
  PROCEDURE SetDefaultRec(VAR r: DefaultsRecord); 

  VAR 
    actualProcRec: TextProcRecord;      (*read and call only*)
    actualDefaultsRec: DefaultsRecord;  (*read and call only*)

END ScreenDriver2.
