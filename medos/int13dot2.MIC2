.MAP 300FOR1      1 B   OR  DZ 0  -  0  -  - - -   S 0 POP -    STK -> R0          1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1          1 B   OR  DZ 0  -  3  -  - - -   - 0 ALU IR   IR -> R3          1 B   OR  DZ 0  -  2  R 10 - -   - 0 ALU IR   IR^10 -> R2          1 B   OR  DA 0  2  2  -  - - -   - 0 ALU IR   IR OR R2 -> R2          1 Q   -   AB 1  0  T  -  - - -   - 0 -   -    R0 - T -> Q          1 -   OR  ZA 0  3  -  -  - - -   - 0 -   -    R3          0 #UP1       Z             - JMP              GOTO UP1 IF R3=0          1 Q   -   ZQ 1  -  -  -  - - -   - 0 -   -    -Q -> Q#UP1      1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   -    Q          0 #EXIT      -FZ           - JMP              GOTO EXIT IF Q>0          1 -   OR  ZA 0  0  -  -  - - -   - 0 MD  ALU  R0 -> MD          1 -   OR  ZA 0  1  -  -  - - -   - 0 MAR ALU  R1 -> MAR          1 -   OR  ZA 0  1  -  -  - - -   - 0 MD  ALU  R1 -> MD          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 -   -   AB 1  S  H  -  - - -   - 0 -   -    S - H          0 TRAP(3)    C             - JMP              TRAP(3) IF S >= H          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP#EXIT     1 B   +   DA 0  2  2  -  - - -   - 0 ALU PC   PC + R2 -> R2           1 B   -+  DA 1  2  2  -  - - -   - 1 2        R2 - 2 -> R2          1 B*  OR  DZ 0  2  T  -  - - -   S 0 PC  ALU  R2 -> PC, STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 301FOR2      1 B   -+  ZA 0  S  4  -  - - -   - 0 MAR ALU  S-1 -> R4 -> MAR          1 B   OR  DZ 0  -  2  -  - - -   - 0 ALU IR   IR -> R2          0 #POS       -H            - JMP              GOTO POS IF -H          1 B   OR  DA 0  2  2  R 10 - -   - 1 377      (377^10) OR R2 -> R2#POS      1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU MD   MD -> R0          1 -   -+  ZA 0  4  -  -  - - -   - 0 MAR ALU  R4 - 1 -> MAR           1 B   OR  DZ 0  -  3  R 10 - -   - 0 ALU IR   IR^10 -> R3          1 B   OR  DA 0  3  3  -  - - -   - 0 ALU IR   IR OR R3 -> R3          1 B   OR  DZ 0  -  1  -  - - -   - 0 ALU MD   MD -> R1          1 -   OR  ZA 0  1  -  -  - - -   - 0 MAR ALU  R1 -> MAR          1 B   +   DA 0  2  4  -  - - -   - 0 ALU MD   MD + R2 -> R4           0 #TERM      V             - JMP              IF OVERFLOW          1 B   -   AB 1  4  0  -  - - -   - 0 -   -    R4 - R0 -> R0           1 -   OR  ZA 0  2  -  -  - - -   - 0 -   -    R2          0 #UP2       -F            - JMP              GOTO UP2 IF R2>=0          1 B   -   ZA 1  0  0  -  - - -   - 0 -   -    -R0 -> R0#UP2      1 -   OR  ZA 0  0  -  -  - - -   - 0 -   -    R0          0 #TERM      -FZ           - JMP              GOTO TERM IF R0>0          1 -   OR  ZA 0  4  -  -  - - -   - 0 MD  ALU  R4 -> MD          1 -   OR  ZA 0  1  -  -  - - -   - 0 MAR ALU  R1 -> MAR          1 B   +   DA 0  3  3  -  - - -   - 0 ALU PC   PC + R3 -> R3           1 B   -+  DA 1  3  3  -  - - -   - 1 2        R3 - 2 -> R3          1 -   OR  ZA 0  3  -  -  - - -   - 0 PC  ALU  R3 -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP#TERM     1 B   -+  DA 1  S  S  -  - - -   - 1 2        S - 2 -> S          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 302ENTC      1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU PC   PC -> R0          1 B   +   DA 0  0  0  R 10 - -   - 0 ALU IR   IR^10 + R0 -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU IR   IR + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 PC  ALU  R0 -> PC          1 B   OR  DZ 0  -  0  R 10 - -   - 0 ALU IR   IR^10 -> R0          1 B   OR  DA 0  0  0  -  - - -   - 0 ALU IR   IR OR R0 -> R0          1 B   OR  DZ 0  -  1  R 10 - -   - 0 ALU IR   IR^10 -> R1          1 B   OR  DA 0  1  1  -  - - -   - 0 ALU IR   IR OR R1 -> R1          1 Q   -   AB 1  1  0  -  - - -   - 0 -   -    R1 - R0 -> Q          1 B   +   DQ 0  -  2  -  - - -   - 1 2        Q + 2 -> R2          1 B   +   AB 0  2  2  -  - - -   - 0 -   -    R2 + R2 -> R2           1 B   +   DA 0  2  2  -  - - -   - 0 ALU PC   PC + R2 -> R2           1 -   OR  ZA 0  2  -  -  - - -   - 0 MD  ALU  R2 -> MD          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 -   -   AB 1  S  H  -  - - -   - 0 -   -    S - H          0 TRAP(3)    C             - JMP              TRAP(3) IF S >= H          1 B   -   AB 1  T  0  -  - - -   - 0 -   -    T - R0 -> R0          0 #ENTC1     S             - JMP              IF T < R0          1 -   -   AB 1  T  1  -  - - -   - 0 -   -    T - R1          0 #ENTC1     -SZ           - JMP              IF T > R1          1 B   +   ZA 1  0  0  -  - - -   - 0 -   -    R0 + 1 -> R0          1 B   +   AB 0  0  0  -  - - -   - 0 -   -    R0 + R0 -> R0           1 B   +   DA 0  0  0  -  - - -   - 0 ALU PC   PC + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 PC  ALU  R0 -> PC#ENTC1    1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU PC   PC -> R0          1 B   +   DA 0  0  0  R 10 - -   - 0 ALU IR   IR^10 + R0 -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU IR   IR + R0 -> R0           1 B*  OR  DZ 0  0  T  -  - - -   S 0 PC  ALU  R0 -> PC, STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 303EXC       1 B   -+  ZA 0  S  S  -  - - -   - 0 MAR ALU  S - 1 -> S -> MAR          1 -   OR  ZQ 0  -  -  -  - - -   - 0 PC  MD   MD -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 304TRAP      1 B   &   DA 0  T  0  -  - - -   - 1 17       T MOD 16 -> R0          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          0 TRAP(R0)   T             - JMP              TRAP(R0).NOP.NOP.MAP 305CHK       1 B   OR  ZA 0  T  2  -  - - -   - 0 -   -    T -> R2 !HI"          1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1 !LOW"          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T  !X"           1 -   -   AB 1  T  1  -  - - -   - 0 -   -    T-R1          0 TRAP(4)    S             - JMP              IF X < LOW          1 -   -   AB 1  2  T  -  - - -   - 0 -   -    R2-T          0 TRAP(4)    S             - JMP              IF HI < X          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 306CHKZ      1 B   OR  ZA 0  T  2  -  - - -   - 0 -   -    T -> R2 !HI"          1 B   +   DZ 0  -  T  -  - - -   S 0 POP -    STK -> T  !X"           1 -   -   AB 1  2  T  -  - - -   - 0 -   -    R2 - T          0 TRAP(4)    -C            - JMP              IF HI < X#CHKOK    1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 307CHKS      1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 #CHKOK     -F            - JMP              IF >= 0          0 TRAP(4)    T             - JMP              TRAP(4)$.MAP 310EQL       1 -   -   DA 1  T  -  -  - - -   S 0 POP -    STK-T          0 #PUSH1     Z             - JMP              IF =0#PUSH0    1 B   &   ZQ 0  -  T  -  - - -   - 0 -   -    0 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 311NEQ       1 B   -   DA 1  T  T  -  - - -   S 0 POP -    STK-T          0 #PUSH1     -Z            - JMP              IF # 0          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 312LSS       1 -   -   DA 1  T  -  -  - - -   S 0 POP -    STK-T          0 #PUSH1     S             - JMP              IF STK < T          1 B   &   ZQ 0  -  T  -  - - -   - 0 -   -    0 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 313LEQ       1 -   -   DA 1  T  -  -  - - -   S 0 POP -    STK-T          0 #PUSH1     SZ            - JMP              IF STK <= T          1 B   &   ZQ 0  -  T  -  - - -   - 0 -   -    0 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 314GTR       1 -   -   DA 1  T  -  -  - - -   S 0 POP -    STK-T          0 #PUSH0     SZ            - JMP              IF STK <= T#PUSH1    1 B   OR  DZ 0  -  T  -  - - -   - 1 1        1 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 315GEQ       1 -   -   DA 1  T  -  -  - - -   S 0 POP -    STK-T          0 #PUSH0     S             - JMP              IF STK < T          1 B   OR  DZ 0  -  T  -  - - -   - 1 1        1 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 316ABS       1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 #NG       -F             - JMP              JMP IF >= 0.MAP 317NEG       1 B   -   ZA 1  T  T  -  - - -   - 0 -   -    -T -> T          0 TRAP(10)   V             - JSR              IF OVERFLOW#NG       1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 320OR        1 B   OR  DA 0  T  T  -  - - -   S 0 POP -    STK OR T -> T           1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 321XOR       1 B   XOR DA 0  T  T  -  - - -   S 0 POP -    STK XOR T -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 322AND       1 B   &   DA 0  T  T  -  - - -   S 0 POP -    STK & T -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 323COM       1 B   -XR ZA 0  T  T  -  - - -   - 0 -   -    -(0 XOR T) -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 324IN        1 B   +   DZ 1  -  0  -  - - -   S 0 SR  ALU  STK+1 -> R0 -> SR          1 -   -+  DA 1  0  -  -  - - -   - 1 21       R0 - 21          0 #PUSH0     C             - JMP              IF R0 > 16          1 B   &   DA 0  T  T  RR - - -   - 1 1        (1^SR) & T -> T          0 #PUSH1     -Z            - JMP              GOTO PUSH1 IF #0          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 325LINIL     1 B*  -XR AB 0  T  T  -  - - -   S 0 PSH -    T -> STK, -1 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 326MSK       1 -   OR  ZA 0  T  -  -  - - -   - 0 SR  ALU  T -> SR          1 B   OR  DZ 0  -  T  MR - - -   - 1 0        MSK(SR) -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 327NOT       1 B   XOR DA 0  T  T  -  - - -   - 1 1        1 XOR T -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 330ADD       1 B   +   DA 0  T  T  -  - - -   S 0 POP -    T+STK -> T          0 TRAP(10)   V             - JSR              IF OVERFLOW          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 331SUB       1 B   -   DA 1  T  T  -  - - -   S 0 POP -    STK-T -> T          0 TRAP(10)   V             - JSR              IF OVERFLOW          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 332  MUL       1 Q   OR  DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q          1 B   XOR AQ 0  T  3  -  - - -   - 0 -   -    T XOR Q -> R3           1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   -    Q          0 QPOS       -F            - JMP              IF >= 0          1 Q   -   ZQ 1  -  -  -  - - -   - 0 -   -    -Q -> QQPOS      1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 TPOS       -F            - JMP              IF >= 0          1 B   -   ZA 1  T  T  -  - - -   - 0 -   -    -T -> TTPOS      0 #MUL16        T          - JSR              Q * T -> [R2,Q]          1 -   OR  ZA 0  2  -  -  - - -   - 0 -   -    R2          0 NO-OV      Z             - JMP              IF R2=0          0 TRAP(10)   T             - JSR              IF OVERFLOW          0 NO.OVER    T             - JMP              IF MASKEDNO-OV     1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   -    Q          0 TRAP(10)   F             - JSR              IF OVERFLOWNO.OVER   1 -   OR  ZA 0  3  -  -  - - -   - 0 -   -    R3          0 RESPOS     -F            - JMP              JMP IF >=0          1 Q   -   ZQ 1  -  -  -  - - -   - 0 -   -    -Q -> QRESPOS    1 B   OR  ZQ 0  -  T  -  - - -   - 0 -   -    Q -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 333DIV       1 Q   OR  DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q          1 B   XOR AQ 0  T  3  -  - - -   - 0 -   -    T XOR Q -> R3           1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   -    Q          0 D.QPOS     -F            - JMP              JMP IF >=0          1 Q   -   ZQ 1  -  -  -  - - -   - 0 -   -    -Q -> QD.QPOS    1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 TRAP(10)    Z            - JSR              IF ZERODIVIDE           0 D.TPOS     -F            - JMP              IF > 0          1 B   -   ZA 1  T  T  -  - - -   - 0 -   -    -T -> T          1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   -    Q          0 D.TPOS     -F            - JMP              GOTO #D3 IF >=0          1 -   -+  ZA 0  T  -  -  - - -   - 0 -   -    T - 1          0 TRAP(10)   Z             - JSR              IF OV !MININT DIV -1"D.TPOS    0 #DIVIDE    T             - JSR              Q DIV T -> Q          1 -   OR  ZA 0  3  -  -  - - -   - 0 -   -    R3          0 D.RESPOS   -F            - JMP              JMP IF >=0          1 Q   -   ZQ 1  -  -  -  - - -   - 0 -   -    -Q -> QD.RESPOS  1 B   OR  ZQ 0  -  T  -  - - -   - 0 -   -    Q -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$. MAP 334  NOT USED .MAP 335BIT       1 -   +   ZA 1  T  -  -  - - -   - 0 SR  ALU  T+1 -> SR          1 B   OR  DZ 0  -  T  RR - - -   - 1 1        (1^SR) -> T.MAP 336  NOP          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 337MOVF      1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1    !FROM OFFS"          1 Q   +   DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q     !FROM FP"          1 BQL +   DZ 0  -  0  -  - - -   - 1 0        [0,Q]*2 -> [R0,Q]          1 BQL +   ZA 0  0  0  -  - - -   - 0 -   -    [R0,Q]*2 -> [R0,Q]          1 B   +   AQ 0  1  1  -  - - -   - 0 -   -    R1 + Q -> R1 !FROM ADDR"          1 B   +   ZA C  0  0  -  - - -   - 0 -   -    R0 + C -> R0 !FROM BNK"           1 -   -+  DA 1  0  -  -  - - -   - 1 4        R0 - 4          0 TRAP(5)    Z             - JMP              IF BNK = 4          1 B   OR  DZ 0  -  3  -  - - -   S 0 POP -    STK -> R3    !TO OFFS"          1 Q   +   DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q     !TO FP"          1 BQL +   DZ 0  -  2  -  - - -   - 1 0        (0,Q)*2 -> (R2,Q)          1 BQL +   ZA 0  2  2  -  - - -   - 0 -   -    (R2,Q)*2 -> (R2,Q)          1 B   +   AQ 0  3  3  -  - - -   - 0 -   -    R3 + Q -> R3 !TO ADDR"          1 B   +   ZA C  2  2  -  - - -   - 0 -   -    R2 + C -> R2 !TO BNK"          1 -   +   AB 0  3  T  -  - - -   - 0 -   -    R3 + T          1 B   +   ZA C  2  4  -  - - -   - 0 -   -    R2 + C -> R4          1 -   -+  DA 1  4  -  -  - - -   - 1 4        R4 - 4          0 TRAP(5)    C             - JMP              IF OVERFLOW          1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 MOVF2      Z             - JMP              IF T=0MOVF1     1 -   OR  ZA 0  0  -  -  - - -   - 0 BNK ALU  R0 -> BNK          1 B*  +   ZA 1  1  1  -  - - -   - 0 MAR ALU  R1 -> MAR, R1 + 1 -> R1           1 B   +   ZA C  0  0  -  - - -   - 0 -   -    R0 + C -> R0          1 B   +   ZA 1  3  3  -  - - -   - 0 MD  MD   MD -> MD, R3 + 1 -> R3          1 B*  +   ZA C  2  2  -  - - -   - 0 BNK ALU  R2 -> BNK, R2 + C -> R2           1 -   -+  ZA 0  3  -  -  - - -   - 0 MAR ALU  R3 - 1 -> MAR           1 B   -+  ZA 0  T  T  -  - - -   - 0 -   -    T - 1 -> T          0 MOVF1      -Z          - JMP                IF <> 0MOVF2     1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 340MOV       1 B   +   DZ 1  -  2  -  - - -   S 0 POP -    STK + 1 -> R2 !SRC"          0 TRAP(5)    Z             - JMP              IF NIL          1 B   +   AB 0  T  2  -  - - -   - 0 -   -    T + R2 -> R2          1 B   +   DA 0  T  1  -  - - -   S 0 POP -    STK + T -> R1 !DST"          0 TRAP(5)    C             - JMP              IF OVERFLOW          1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T             !SIZE"          0 MOV2       Z             - JMP              IF T=0MOV1      1 -   -   AB 0  2  T  -  - - -   - 0 MAR ALU  R2 - T - 1 -> MAR          1 -   OR  ZQ 0  -  -  -  - - -   - 0 MD  MD   MD -> MD          1 -   -   AB 1  1  T  -  - - -   - 0 MAR ALU  R1 - T -> MAR           1 B   -+  ZA 0  T  T  -  - - -   - 0 -   -    T - 1 -> T          0 MOV1      -Z             - JMP              IF <> 0MOV2      1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 341CMP       1 B   +   DA 0  T  2  -  - - -   S 0 POP -    STK + T -> R2 !SRC1"          0 TRAP(5)    C             - JMP              IF OVERFLOW          1 B   +   DA 0  T  1  -  - - -   S 0 POP -    STK + T -> R1 !SRC2"          0 TRAP(5)    C             - JMP              IF OVERFLOW          1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T             !SIZE"          0 CMP3       Z             - JMP              IF T=0CMP1      1 -   -   AB 1  2  T  -  - - -   - 0 MAR ALU  R2 - T -> MAR           1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU MD   MD -> R0          1 -   -   AB 1  1  T  -  - - -   - 0 MAR ALU  R1 - T -> MAR           1 -   -   DA 1  0  -  -  - - -   - 0 ALU MD   MD - R0          0 CMP2       -Z            - JMP              IF MD <> R0          1 B   -+  ZA 0  T  T  -  - - -   - 0 -   -    T - 1 -> T          0 CMP1       -Z            - JMP              IF <> 0CMP2      1 B   OR  DZ 0  -  T  -  - - -   S 0 ALU MD   MD -> T -> STK          1 B   OR  ZA 0  0  T  -  - - -   - 0 -   -    R0 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAPCMP3      1 -   OR  ZA 0  T  -  -  - - -   S 0 PSH -    T -> STK          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 342          0 DDT        T             - JMP.MAP 343            0 REPL       T             - JMP.MAP 344          0 BBLT       T             - JMP.MAP 345          0 DCH        T             - JMP.MAP 346UNPACK    1 B   -+  DZ 0  -  0  -  - - -   S 0 SR  ALU  -STK-1 -> R0 -> SR          1 B*  OR  DZ 0  T  T  RR - - -   - 0 ALU ALU  T^SR -> T          1 -   +   DA 0  0  -  -  - - -   S 0 SR  ALU  STK + R0 -> SR          1 B   -&  DA 0  T  T  MR - - -   - 1     0    _MSK(0,SR) & T -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 347PACK      1 B   +   DZ 1  -  3  -  - - -   S 0 POP -    STK + 1 -> R3           1 -   -   DA 1  3  -  -  - - -   S 0 SR  ALU  STK - R3 -> SR          1 B   OR  DZ 0  -  2  -  - - -   S 0 MAR ALU  STK -> R2 -> MAR          1 B   OR  DZ 0  -  0  MR - - -   - 1 0        MSK(0,SR) -> R0          1 -   OR  ZA 0  3  -  -  - - -   - 0 SR  ALU  R3 -> SR          1 B*  OR  DZ 0  0  0  RR - - -   - 0 ALU ALU  (R0^SR) -> R0           1 B   &   DA 0  0  1  -  - - -   - 0 ALU MD   MD & R0 -> R1           1 B*  OR  DZ 0  T  T  RR - - -   - 0 ALU ALU  (T^SR) -> T             1 B   -&  AB 0  0  T  -  - - -   - 0 -   -    _R0 & T -> T            1 -   OR  AB 0  1  T  -  - - -   - 0 MD  ALU  R1 OR T -> MD           1 B*  OR  DZ 0  2  T  -  - - -   S 0 MAR ALU  R2 -> MAR, STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 350GB        1 B*  OR  DZ 0  T  0  -  - - -   S 0 ALU IR   T -> STK, IR -> R0          1 -   OR  ZA 0  L  -  -  - - -   - 0 MAR ALU  L -> MAR          0 #GB        T             - JMP              GOTO GB#GBREP    1 -   OR  ZA 0  T  -  -  - - -   - 0 MAR ALU  T -> MAR#GB       1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 B   -+  ZA 0  0  0  -  - - -   - 0 -   -    R0 - 1 -> R0          0 #GBREP     -Z            - JMP              IF # 0          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 351GB1       1 -   OR  ZA 0  L  -  -  - - -   - 0 MAR ALU  L -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 352ALLOC     1 B   OR  ZA 0  T  1  -  - - -   - 0 -   -    T -> R1          1 B   OR  ZA 0  S  T  -  - - -   - 0 -   -    S -> T          1 B   +   AB 0  1  S  -  - - -   - 0 -   -    S+R1 -> S          0 TRAP3      C             - JMP              IF OVERFLOW          1 -   -   AB 1  H  S  -  - - -   - 0 -   -    H-S           0 TRAP3     -C             - JMP              IF H < S          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 353ENTR      1 B   OR  DZ 0  -  1  -  - - -   - 0 ALU IR   IR -> R1          1 B   +   AB 0  1  S  -  - - -   - 0 -   -    S+R1 -> S          0 TRAP3      C             - JMP              IF OVERFLOW          1 -   -   AB 1  H  S  -  - - -   - 0 -   -    H-S           0 TRAP3     -C             - JMP              IF H < S          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAPTRAP3     1 B   -+  AB 1  1  S  -  - - -   - 0 -   -    S - R1 -> S          0 TRAP(3)    T             - JMP              TRAP(3)$.MAP 354RTN       1 B   OR  ZA 0  L  S  -  - - -   - 0 -   -    L -> S          1 B   +   ZA 1  S  1  -  - - -   - 0 MAR ALU  S+1 -> R1 -> MAR          1 B   OR  DZ 0  -  L  -  - - -   - 0 ALU MD   MD -> L          1 B   +   ZA 1  1  1  -  - - -   - 0 MAR ALU  R1+1 -> R1 -> MAR          1 B   OR  DZ 0  -  2  -  - - -   - 0 ALU MD   MD -> R2          0 #LOC       -F            - JMP              IF >= 0          1 -   OR  ZA 0  S  -  -  - - -   - 0 MAR ALU  S -> MAR          1 B   OR  DZ 0  -  G  -  - - -   - 0 ALU MD   MD -> G          1 -   OR  ZA 0  G  -  -  - - -   - 0 MAR ALU  G -> MAR          1 -   OR  ZQ 0  -  -  -  - - -   - 0 F   MD   MD -> F          1 B   XOR DA 0  2  2  R  1 - -   - 1 1        1^1 XOR R2 -> R2#LOC      1 -   OR  ZA 0  2  -  -  - - -   - 0 PC  ALU  R2 -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 355CX        1 B   OR  DZ 0  -  3  -  - - -   - 0 ALU IR   IR -> R3          1 B   OR  DZ 0  -  2  -  - - -   - 0 ALU IR*  IR -> R2#MARKG    1 -   OR  ZA 0  G  -  -  - - -   - 0 MD  ALU  G -> MD          1 B   OR  ZA 0  S  1  -  - - -   - 0 MAR ALU  S -> R1 -> MAR          1 B*  +   ZB 1  L  S  -  - - -   - 0 MD  ALU  L -> MD, S+1 -> S          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 B   OR  DZ 0  -  4  R  1 - -   - 1 1        1^1 -> R4          1 B   OR  DA 0  4  4  -  - - -   - 0 ALU PC   PC OR R4 -> R4          1 -   OR  ZA 0  4  -  -  - - -   - 0 MD  ALU  R4 -> MD          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 -   OR  ZQ 0  -  -  -  - - -   - 0 MD  F    F -> MD          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 B   OR  ZA 0  1  L  -  - - -   - 0 -   -    R1 -> L          1 B   OR  DZ 0  -  0  -  - - -   - 1 40       40 -> R0          1 -   +   AB 0  0  3  -  - - -   - 0 MAR ALU  R0+R3 -> MAR          1 B   OR  DZ 0  -  G  -  - - -   - 0 ALU MD   MD -> G          1 -   OR  ZA 0  G  -  -  - - -   - 0 MAR ALU  G -> MAR          1 -   OR  ZQ 0  -  -  -  - - -   - 0 F   MD   MD -> F          1 -   +   AB 0  2  2  -  - - -   - 0 PC  ALU  R2 + R2 -> PC           1 B   OR  DZ 0  -  1  R 10 - -   - 0 ALU IR   IR^10 -> R1          1 B   OR  DA 0  1  1  -  - - -   - 0 ALU IR*  IR OR R1 -> R1          1 -   OR  ZA 0  1  -  -  - - -   - 0 PC  ALU  R1 -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 356CI        1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 B   OR  DZ 0  -  2  -  - - -   - 0 ALU IR*  IR -> R2          0 #MARK      T             - JMP              MARK(IR).MAP 357CF        1 -   -+  ZA 0  S  -  -  - - -   - 0 MAR ALU  S - 1 -> MAR          1 B   OR  DZ 0  -  3  -  - - -   - 1 377      377 -> R3          1 B   &   DA 0  3  2  -  - - -   - 0 ALU MD   MD & R3 -> R2           1 B   &   DA 0  3  3  R 10 - -   - 0 ALU MD   ROT(MD,10) & R3 -> R3          0 #MARKG     T             - JMP$.MAP 360CL        1 -   OR  ZA 0  L  -  -  - - -   - 0 MD  ALU  L -> MD          1 B   OR  DZ 0  -  2  -  - - -   - 0 ALU IR*  IR -> R2          0 #MARK      T             - JMP              MARK(IR).MAP 361,362,363,364,365,366,367,370,371,372,373,374,375,376,377CL1       1 -   OR  ZA 0  L  -  -  - - -   - 0 MD  ALU  L -> MD          1 B   OR  ZQ 0  -  2  -  - - -   - 0 -   -    Q -> R2.                                                       MARK(Q)#MARK     1 B   OR  ZA 0  S  1  -  - - -   - 0 MAR ALU  S -> R1 -> MAR          1 B*  +   ZB 1  L  S  -  - - -   - 0 MD  ALU  L -> MD, S+1 -> S          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 -   OR  ZQ 0  -  -  -  - - -   - 0 MD  PC   PC -> MD          1 -   OR  ZA 0  S  -  -  - - -   - 0 MAR ALU  S -> MAR          1 B   +   DA 0  S  S  -  - - -   - 1 2        S + 2 -> S          1 B   OR  ZA 0  1  L  -  - - -   - 0 -   -    R1 -> L          1 -   +   AB 0  2  2  -  - - -   - 0 PC  ALU  R2 + R2 -> PC           1 B   OR  DZ 0  -  1  R 10 - -   - 0 ALU IR   IR^10 -> R1          1 B   OR  DA 0  1  1  -  - - -   - 0 ALU IR*  IR OR R1 -> R1          1 -   OR  ZA 0  1  -  -  - - -   - 0 PC  ALU  R1 -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$