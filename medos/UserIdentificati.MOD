(****************************************                                      **          M E D O S - 2               **          *************               **                                      **                                      **          UserIdentification          **                                      **          Version 4.2  29.11.82       *    *                                      **          Svend Erik Knudsen          **          Institut fuer Informatik    **          ETH-Zuerich                 **          CH-8092 Zuerich             **                                      ****************************************)IMPLEMENTATION MODULE UserIdentification;  FROM Monitor IMPORT CurrentLevel, TermProcedure;  CONST    levels = 8;    nogroup         =       0;    mintrustedgroup = 100000B;    nopassword      =       0;  VAR    user: ARRAY [0..levels+1] OF User;    top: CARDINAL;    (* user[top  ] = real   user of level "top" *)    (* user[top+1] = actual user of level "top" *)    loggedin: BOOLEAN; (* V4.1 with unmodified SEK *)  PROCEDURE GetUser(VAR u: User);  BEGIN    u := user[top+1]  END GetUser;  PROCEDURE SetUser(u: User; VAR done: BOOLEAN);    VAR l: CARDINAL;  BEGIN    l := CurrentLevel();    IF NOT loggedin THEN user[1] := u; loggedin := TRUE END;    IF l >= levels THEN HALT END;    WHILE top < l DO      INC(top);      user[top+1] := user[top];    END;    IF (user[top].group < mintrustedgroup) AND       (u.group >= mintrustedgroup) THEN      done := FALSE    ELSE      user[top+1] := u;      done := TRUE;    END;  END SetUser;  PROCEDURE ResetUser;    VAR l: CARDINAL;  BEGIN    l := CurrentLevel();    IF l = 0 THEN loggedin := FALSE END;    IF l >= levels THEN HALT END;    WHILE top < l DO      INC(top);      user[top+1] := user[top];    END;    user[top+1] := user[top];  END ResetUser;  PROCEDURE ResetLevel;    VAR l: CARDINAL;  BEGIN    l := CurrentLevel();    IF top >= l THEN top := l-1    END;  END ResetLevel;BEGIN  WITH user[0] DO    group := mintrustedgroup; member := 0;    password1 := nopassword; password2 := nopassword;  END;  top := 0;  ResetUser;  TermProcedure(ResetLevel);END UserIdentification.