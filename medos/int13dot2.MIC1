. .........................................................................                                                                        ..       *******************************************************          ..       *                                                     *          ..       *   INTERPRETER        VERSION 13.2        12.6.81    *          ..       *                                                     *          ..       *******************************************************          ..                                                                        ..                                                                        ..                    NIKLAUS WIRTH  WERNER WINIGER                       ..                    INSTITUT FUER INFORMATIK                            ..                    ETH ZENTRUM                                         ..                    CH-8092 ZUERICH                                     ..                                                                        ..                    M-CODE INTERPRETER                                  ..                    BOOTSTRAP/DUMP                                      ..                    DISPLAY HANDLING PROCEDURES                         ..                    REAL OPERATIONS                                     ..                                                                        ..                                                                        .. .........................................................................            7.0  IO WITH REARRANGED DELAY.                 DIVISION WITH CORRECT REMAINDER .                 BOOTSTRAP/DUMP FROM/TO DISK.                 SPEED CATEGORIES INTRODUCED.            8.0  FOR2 CORRECTED.                 FREE LOCATIONS ASSEMBLED BEFORE LI0.                 INTERRUPT LOCATIONS NEWLY DISTRIBUTED.            8.1  BOOTSTRAP CORRECTED.                 PUT TO DISK SLOWN DOWN.            9.0  P-REGISTER INTRODUCED .                 PRIORITY HANDLING (M-REGISTER) ENHANCED.                 INSTRUCTIONS REORDERED.                 CODE FRAME TABLE REMOVED.            9.1  SHL CORRECTED.                 NEW MAP CONCEPT ADAPTED.           10.0  INSTRUCTION SET EXTENDED.                 CHECKS ADDED.                 TRAP NUMBERS CHANGED.           10.1  REAL ARITHMETIC ADDED .           11.0  MULTIPLICATION CORRECTED.                 128K DUMP.                 FIXED DISK BOOT.           12.0  REALS CORRECTED.                 MAP PROM ADDRESSED LOCATIONS ASSEMBLED CONTIGUOUS.           12.1  PUT/GET SLOWN DOWN.           13.0  MUL10 REMOVED.                 DMUL, DDIV, DMUL2, DDIV2, ESC INSERTED.           13.1  NEG (TRAP) CORRECTED.           13.2  ERRORS IN REPLICATE CORRECTED. SYS;5 -> 1 $.     DEFINITION OF THE SPEED CATEGORIES:. SLOW A : JMAP.     B : CONDITIONAL JUMP & JSR    <.     C : UNCONDITIONAL JUMP & JSR  <.     D : RETURN                    <.                                    > DISABLED.     E : BUS SOURCE = MD           <.     F : BUS DESTINATION = MAR     <.     G : BUS SOURCE = IR/IR4/IR*   <. SLOW H : PUT (DISK)$ZERO      0 START      T             - JMP    TO THE BOOTSTRAP CODE#RESTART  1 B   OR  DZ 0  -  5  -  - - -   - 1 2        KBDATA -> R5          0 #GET       T             - JSR              GET(KBDATA,DUMMY)          1 B   OR  DZ 0  -  3  -  - - -   - 1 4        4 -> R3          1 -   OR  ZA 0  3  -  -  - - -   - 0 MAR ALU  R3 -> MAR          1 B   OR  DZ 0  -  P  -  - - -   - 0 ALU MD   MD -> P.                                                       R3 <> 0          0 #RESTREGS  T             - JSR              RESTORE REGS(TRUE)          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP#REQ8     0 #LINE8     T             - JMP              GOTO LINE8#REQ9     0 #LINE9     T             - JMP              GOTO LINE9#REQ10    0 #LINE10    T             - JMP              GOTO LINE10   #REQ11    0 #LINE11    T             - JMP              GOTO LINE11#REQ12    0 #CLOCK     T             - JMP              GOTO CLOCK#REQ13    0 #DISK      T             - JMP              GOTO DISK#REQ14    0 #LINE14    T             - JMP              GOTO LINE14#REQ15    0 #LINE15    T             - JMP              GOTO LINE14$.MAP 0, 1, 2, 3, 4, 5, 6, 7, 10, 11, 12, 13, 14, 15, 16, 17 LI0       1 B*  OR  ZQ 0  T  T  -  - - -   S 0 PSH -    T -> STK, Q -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 20LIB       1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU IR   T -> STK, IR -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP. MAP 21   NOT USED .MAP 22LIW       1 B*  OR  DZ 0  T  T  R 10 - -   S 0 ALU IR   T->STK, (IR^10) -> T          1 B   OR  DA 0  T  T  -  - - -   - 0 ALU IR   IR OR T -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 23LID       1 B*  OR  DZ 0  T  T  R 10 - -   S 0 ALU IR   T->STK, (IR^10) -> T          1 B   OR  DA 0  T  T  -  - - -   - 0 ALU IR   IR OR T -> T          1 B*  OR  DZ 0  T  T  R 10 - -   S 0 ALU IR   T->STK, (IR^10) -> T          1 B   OR  DA 0  T  T  -  - - -   - 0 ALU IR   IR OR T -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 24LLA       1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU IR   T -> STK, IR -> T          1 B   +   AB 0  L  T  -  - - -   - 0 -   -    L+T -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 25LGA       1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU IR   T -> STK, IR -> T          1 B   +   AB 0  G  T  -  - - -   - 0 -   -    G+T -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 26LSA       1 B   +   DA 0  T  T  -  - - -   - 0 ALU IR   IR+T -> T          0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 27LEA       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 1 40       40 + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  0  -  - - -   S 0 ALU IR   IR -> R0, T -> STK          1 B   +   DA 0  0  T  -  - - -   - 0 ALU MD   MD + R0 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 30JPC       1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 #SKIP2     -Z            - JMP              JMP IF #0          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T.MAP 31JP        1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU PC   PC -> R0          1 B   +   DA 0  0  0  R 10 - -   - 0 ALU IR   (IR^10)+R0 -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU IR*  R0+IR -> R0          1 -   OR  ZA 0  0  -  -  - - -   - 0 PC  ALU  R0 -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 32JPFC      1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 #SKIP1     -Z            - JMP              JMP IF #0          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T.MAP 33JPF       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU PC   PC -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU IR*  R0+IR -> R0          1 -   OR  ZA 0  0  -  -  - - -   - 0 PC  ALU  R0 -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 34JPBC      1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 #SKIP1     -Z            - JMP              JMP IF #0          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T.MAP 35JPB       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU PC   PC -> R0          1 B   -+  DA 1  0  0  -  - - -   - 0 ALU IR*  R0-IR -> R0          1 -   OR  ZA 0  0  -  -  - - -   - 0 PC  ALU  R0 -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP#SKIP2    1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   IR   IR#SKIP1    1 B   OR  DZ 0  -  T  -  - - -   S 0 POP IR   IR, STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 36ORJP      1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 #OR1       Z             - JMP              IF T = 0#AND1     1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU PC   PC -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU IR*  IR + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 PC  ALU  R0 -> PC          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP#OR1      1 B   +   DZ 1  -  0  -  - - -   - 0 ALU PC   PC + 1 -> R0          1 B*  OR  DZ 0  0  T  -  - - -   S 0 PC  ALU  R0 -> PC, STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 37ANDJP     1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 #AND1      Z             - JMP              IF T = 0          1 B   +   DZ 1  -  0  -  - - -   - 0 ALU PC   PC + 1 -> R0          1 B*  OR  DZ 0  0  T  -  - - -   S 0 PC  ALU  R0 -> PC, STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 40LLW       1 B   +   DA 0  L  0  -  - - -   - 0 ALU IR   IR+L -> R0          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 41LLD       1 B   +   DA 0  L  0  -  - - -   - 0 ALU IR   IR+L -> R0          1 B*  +   ZA 1  0  0  -  - - -   - 0 MAR ALU  R0 -> MAR, R0+1 ->R0          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 42LEW       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 1 40       40 + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU MD   MD + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 43LED       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 1 40       40 + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU MD   MD + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 -   +   ZA 1  0  -  -  - - -   - 0 MAR ALU  R0 + 1 -> MAR           1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57LLW4      1 -   +   AQ 0  L  -  -  - - -   - 0 MAR ALU  L+Q -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 60SLW       1 B   +   DA 0  L  0  -  - - -   - 0 ALU IR   IR+L -> R0          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 61SLD       1 B   +   DA 0  L  0  -  - - -   - 0 ALU IR   IR+L -> R0          1 -   OR  DZ 0  -  -  -  - - -   S 0 MD  ALU  STK -> MD          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   +   ZA 1  0  -  -  - - -   - 0 MAR ALU  R0+1 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 62SEW       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 1 40       40 + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU MD   MD + R0 -> R0           1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 63SED       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 1 40       40 + R0 -> R0           1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU MD   MD + R0 -> R0           1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   +   ZA 1  0  -  -  - - -   - 0 MAR ALU  R0 + 1 -> MAR           1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 64,65,66,67,70,71,72,73,74,75,76,77SLW4      1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   +   AQ 0  L  -  -  - - -   - 0 MAR ALU  L+Q -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 100LGW       1 B   +   DA 0  G  0  -  - - -   - 0 ALU IR   IR+G -> R0          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 101LGD       1 B   +   DA 0  G  0  -  - - -   - 0 ALU IR   IR+G -> R0          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 -   +   ZA 1  0  -  -  - - -   - 0 MAR ALU  R0 + 1 -> MAR           1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP                                        .MAP 102,103,104,105,106,107,110,111,112,113,114,115,116,117LGW2      1 -   +   AQ 0  G  -  -  - - -   - 0 MAR ALU  G+Q -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 120SGW       1 B   +   DA 0  G  0  -  - - -   - 0 ALU IR   IR+G -> R0          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 121SGD       1 B   +   DA 0  G  0  -  - - -   - 0 ALU IR   IR+G -> R0          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   +   ZA 1  0  -  -  - - -   - 0 MAR ALU  R0 + 1 -> MAR           1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 122,123,124,125,126,127,130,131,132,133,134,135,136,137SGW2      1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   +   AQ 0  G  -  -  - - -   - 0 MAR ALU  G+Q -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$TRAP5     1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU MD   MD -> R0 !DUMMY"          0 TRAP(5)    T             - JMP              TRAP(5)          .MAP 140LSW0      1 B*  +   ZA 1  T  T  -  - - -   - 0 MAR ALU  T -> MAR, T+1 -> T          0 TRAP5      Z             - JMP              TRAP IF NIL          1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 141,142,143,144,145,146,147,150,151,152,153,154,155,156,157LSW1      1 -   +   AQ 0  T  -  -  - - -   - 0 MAR ALU  T+Q -> MAR          0 TRAP5      C             - JMP              TRAP IF OVERFLOW          1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 160SSW0      1 B   +   DZ 1  -  0  -  - - -   S 0 POP -    STK + 1 -> R0           0 TRAP(5)    Z             - JMP              TRAP IF NIL          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   -+  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 - 1 -> MAR           1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 161,162,163,164,165,166,167,170,171,172,173,174,175,176,177SSW1      1 B   +   DQ 0  -  0  -  - - -   S 0 POP -    STK + Q -> R0           0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 200LSW       1 B   +   DA 0  T  0  -  - - -   - 0 ALU IR   IR+T -> R0          0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 201LSD       1 B   +   DA 0  T  0  -  - - -   - 0 ALU IR   IR+T -> R0          0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 B*  +   ZA 1  0  0  -  - - -   - 0 MAR ALU  R0 -> MAR, R0+1 ->R0          0 TRAP5      C             - JMP              TRAP IF OVERFLOW          1 B*  OR  DZ 0  T  T  -  - - -   - 0 ALU MD   MD -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 202LSD0      1 B*  +   ZA 1  T  0  -  - - -   - 0 MAR ALU  T -> MAR, T+1 -> R0          0 TRAP5      C             - JMP              TRAP IF OVERFLOW          1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 203LXFW      1 Q   +   DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q          1 BQL +   DZ 0  -  0  -  - - -   - 1 0        [0,Q] * 2 -> [R0,Q]          1 BQL +   ZA 0  0  0  -  - - -   - 0 -   -    [R0,Q] * 2 -> [R0,Q]          1 B   +   AQ 0  T  1  -  - - -   - 0 -   -    T + Q -> R1          1 B   +   ZA C  0  0  -  - - -   - 0 BNK ALU  R0 + C -> R0 -> BNK          1 -   OR  ZA 0  1  -  -  - - -   - 0 MAR ALU  R1 -> MAR          1 -   -+  DA 1  0  -  -  - - -   - 1 4        R0 - 4          0 TRAP5      Z             - JMP              TRAP IF BNK = 4                    1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 204LSTA      1 B   OR  DZ 0  -  0  -  - - -   - 1 2        2 -> R0          1 -   +   AB 0  G  0  -  - - -   - 0 MAR ALU  G + R0 -> MAR           1 B*  OR  DZ 0  T  0  -  - - -   S 0 ALU IR   T -> STK, IR -> R0          1 B   +   DA 0  0  T  -  - - -   - 0 ALU MD   MD + R0 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 205LXB       1 BQR +   ZA 0  T  T  -  - - -   - 0 -   -    [T,Q]/2 -> [T,Q]          1 -   +   DA 0  T  -  -  - - -   S 0 MAR ALU  STK + T -> MAR          0 TRAP5      C             - JMP              TRAP IF OVERFLOW          1 B   OR  DZ 0  -  1  -  - - -   - 0 ALU MD   MD -> R1          1 -   +   ZQ 0  -  -  -  - - -   - 0 -   -    Q          0 #LXB1      F             - JMP              IF ODD(INDEX)           1 B*  OR  DZ 0  1  1  R 10 - -   - 0 ALU ALU  R1^10 -> R1#LXB1     1 B   &   DA 0  1  T  -  - - -   - 1 377      377 & R1 -> T           1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 206LXW       1 -   +   DA 0  T  -  -  - - -   S 0 MAR ALU  STK + T -> MAR          0 TRAP5      C             - JMP              TRAP IF OVERFLOW          1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 207LXD       1 B   +   AB 0  T  T  -  - - -   - 0 -   -    T + T -> T          0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 B   +   DA 0  T  0  -  - - -   S 0 MAR ALU  STK + T -> MAR -> R0          0 TRAP5      C             - JMP              TRAP IF OVERFLOW          1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 -   +   ZA 1  0  -  -  - - -   - 0 MAR ALU  R0 + 1 -> MAR           0 TRAP5      C             - JMP              TRAP IF OVERFLOW          1 B*  OR  DZ 0  T  T  -  - - -   S 0 ALU MD   T -> STK, MD -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 210DADD      1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1  !YH"          1 B   +   DA 0  T  T  -  - - -   S 0 POP -    STK+T -> T !ZL"          1 B   +   DA C  1  1  -  - - -   S 0 POP -    STK+R1 -> R1            1 -   OR  ZA 0  1  -  -  - - -   S 0 PSH -    R1 -> STK  !ZH"          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 211DSUB      1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1  !YH"          1 B   -   DA 1  T  T  -  - - -   S 0 POP -    STK-T -> T !ZL"          1 B   -   DA C  1  1  -  - - -   S 0 POP -    STK-R1 -> R1          1 -   OR  ZA 0  1  -  -  - - -   S 0 PSH -    R1 -> STK  !ZH"          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP. MAP 212 DMUL. MAP 213 DDIV.                 TO BE FOUND ON PAGE 36. MAP 216 DSHL. MAP 217 DSHR. MAP 214,215     NOT USED$.MAP 220SSW       1 B   OR  DZ 0  -  0  -  - - -   S 0 POP -    STK -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU IR   R0 + IR -> R0           0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 221SSD       1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1          1 B   OR  DZ 0  -  0  -  - - -   S 0 POP -    STK -> R0          1 B   +   DA 0  0  0  -  - - -   - 0 ALU IR   IR+R0 -> R0          0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 -   OR  ZA 0  1  -  -  - - -   - 0 MD  ALU  R1 -> MD          1 B*  +   ZA 1  0  0  -  - - -   - 0 MAR ALU  R0 -> MAR, R0 + 1 -> R0           0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 222SSD0      1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1          1 B   +   DZ 1  -  0  -  - - -   S 0 POP -    STK + 1 -> R0           0 TRAP(5)    Z             - JMP              TRAP IF NIL          1 -   OR  ZA 0  1  -  -  - - -   - 0 MD  ALU  R1 -> MD          1 -   -+  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 - 1 -> MAR           1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 223SXFW      1 B   OR  DZ 0  -  3  -  - - -   S 0 POP -    STK -> R3          1 Q   +   DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q          1 BQL +   DZ 0  -  2  -  - - -   - 1 0        [0,Q] * 2 -> [R2,Q]          1 BQL +   ZA 0  2  2  -  - - -   - 0 -   -    [R2,Q] * 2 -> [R2,Q]          1 B   +   AQ 0  3  3  -  - - -   - 0 -   -    R3 + Q -> R3          1 B   +   ZA C  2  2  -  - - -   - 0 -   -    R2 + C -> R2          1 -   -+  DA 1  2  -  -  - - -   - 1 4        R2 - 4          0 TRAP(5)    Z             - JMP              TRAP IF OVERFLOW          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  2  -  -  - - -   - 0 BNK ALU  R2 -> BNK          1 -   OR  ZA 0  3  -  -  - - -   - 0 MAR ALU  R3 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP                                                  .MAP 224                                          TS        1 B   OR  ZA 0  T  0  -  - - -   - 0 MAR ALU  T -> R0 -> MAR          1 B   OR  DZ 0  -  1  -  - - -   - 1 1        1 -> R1          1 B   OR  DZ 0  -  T  -  - - -   - 0 ALU MD   MD -> T          1 -   OR  ZA 0  1  -  -  - - -   - 0 MD  ALU  R1 -> MD          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 225SXB       1 BQR +   DZ 0  -  0  -  - - -   S 0 POP -    [STK,Q]/2 -> [R0,Q]          1 B   +   DA 0  0  0  -  - - -   S 0 MAR ALU  STK+R0 -> R0 -> MAR          0 TRAP5      C             - JMP              TRAP IF OVERFLOW          1 B   OR  DZ 0  -  1  -  - - -   - 0 ALU MD   MD -> R1          1 B   OR  DZ 0  -  2  -  - - -   - 1 377      377 -> R2          1 B   &   AB 0  2  T  -  - - -   - 0 -   -    R2 & T -> T          1 -   +   ZQ 0  -  -  -  - - -   - 0 -   -    Q          0 #SXB1         F          - JMP              IF LOW-BYTE          1 B*  OR  DZ 0  2  2  R 10 - -   - 0 ALU ALU  R2^10 -> R2          1 B*  OR  DZ 0  T  T  R 10 - -   - 0 ALU ALU  T^10 -> T#SXB1     1 B   -&  AB 0  2  1  -  - - -   - 0 -   -    -R2 & R1 -> R1          1 -   OR  AB 0  1  T  -  - - -   - 0 MD  ALU  T OR R1 -> MD           1 B*  OR  DZ 0  0  T  -  - - -   S 0 MAR ALU  R0 -> MAR, STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 226SXW       1 B   OR  DZ 0  -  0  -  - - -   S 0 POP -    STK -> R0          1 B   +   DA 0  0  0  -  - - -   S 0 POP -    R0 + STK -> R0          0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 227SXD       1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1          1 B   OR  DZ 0  -  0  -  - - -   S 0 POP -    STK -> R0          1 B   +   AB 0  0  0  -  - - -   - 0 -   -    R0 + R0 -> R0           0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 B   +   DA 1  0  0  -  - - -   S 0 POP -    R0+STK+1 -> R0          0 TRAP(5)    C             - JMP              TRAP IF OVERFLOW          1 -   OR  ZA 0  1  -  -  - - -   - 0 MD  ALU  R1 -> MD          1 -   -+  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 - 1 -> MAR           1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 230          0 FADD       T             - JMP.MAP 231            0 FSUB       T             - JMP.MAP 232          0 FMUL       T             - JMP.MAP 233          0 FDIV       T             - JMP.MAP 234          0 FCMP       T             - JMP        .MAP 235FABS      1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1          1 B   -&  DA 0  1  1  R  1 - -   - 1     1    _(1^1) & R1 -> R1          1 -   OR  ZA 0  1  -  -  - - -   S 0 PSH -    R1 -> STK          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 236FNEG      1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1          1 B   XOR DA 0  1  1  R  1 - -   - 1     1    (1^1) XOR R1 -> R1          1 -   OR  ZA 0  1  -  -  - - -   S 0 PSH -    R1 -> STK          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 237          0 FFCT       T             - JMP$.MAP 240READ      1 B   OR  DZ 0  -  5  -  - - -   S 0 POP -    STK -> R5          0 #GET       T             - JSR              GET(R5,R6)          1 -   OR  ZA 0  6  -  -  - - -   - 0 MD  ALU  R6 -> MD          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MAR ALU  T -> MAR, STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 241WRITE     1 B   OR  ZA 0  T  6  -  - - -   - 0 -   -    T -> R6          1 B   OR  DZ 0  -  5  -  - - -   S 0 POP -    STK -> R5          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          0 #PUT       T             - JSR              PUT(R5,R6)          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 242DSKR      0 #CLRADDR   T             - JSR              CLRADDR          1 B   OR  DZ 0  -  1  -  - - -   - 1 200      128 -> R1          1 B   OR  DZ 0  -  0  -  - - -   - 1 10       8 -> R0          1 -   OR  ZA 0  0  -  -  - - -   - 0 IOA ALU  R0 -> IO-ADDRESS#DR       1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   -    IO-DATA -> DUMMY.                                                  ^IOD WHEN HARDWARE READY          1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   IOD  IO-DATA -> DUMMY          1 -   OR  ZQ 0  -  -  -  - - -   - 0 MD  IOD  IO-DATA -> MD           1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   IOD  IO-DATA -> DUMMY          1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   IOD  IO-DATA -> DUMMY          1 B*  +   ZA 1  T  T  -  - - -   - 0 MAR ALU  T -> MAR, T+1 -> T          1 B   -+  ZA 0  1  1  -  - - -   - 0 -   -    R1 - 1 -> R1          0 #DR        -Z            - JMP              IF > 0          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 243DSKW      0 #INITWRIT  T             - JSR              INITWRIT          1 B   OR  DZ 0  -  1  -  - - -   - 1 200      128 -> R1          1 B   OR  DZ 0  -  5  -  - - -   - 1 10       10 -> R5          1 -   OR  ZA 0  5  -  -  - - -   - 0 IOA ALU  R5 -> IO-ADDRESS#DW       1 B*  +   ZA 1  T  T  -  - - -   - 0 MAR ALU  T -> MAR, T+1 -> T          1 -   OR  ZQ 0  -  -  -  - - -   - 0 -   MD   MD -> IO-DATA .                                              ^IOD WHEN HARDWARE READY          1 -   OR  ZQ 0  -  -  -  - - -   - 0 IOD MD   MD -> IO-DATA           1 -   OR  ZQ 0  -  -  -  - - -   - 0 IOD MD   MD -> IO-DATA           1 -   OR  ZQ 0  -  -  -  - - -   - 0 IOD MD   MD -> IO-DATA           1 -   OR  ZQ 0  -  -  -  - - -   - 0 IOD MD   MD -> IO-DATA           1 B   -+  ZA 0  1  1  -  - - -   - 0 -   -    R1 - 1 -> R1          0 #DW        -Z            - JMP              IF > 0          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 244SETRK     1 -   OR  ZA 0  P  -  -  - - -   S 0 PSH -    P -> STK          1 B   OR  ZA 0  T  12 -  - - -   - 0 -   -    T -> R12          0 #SETTRACK  T             - JSR              SETTRACK(T)          1 B   OR  DZ 0  -  P  -  - - -   S 0 POP -    STK -> P          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 245UCHK      1 B   OR  ZA 0  T  2  -  - - -   - 0 -   -    T -> R2    !HI"          1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1 !LOW"          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T    !X"          1 -   -   AB 1  T  1  -  - - -   - 0 -   -    T - R1          0 TRAP(4)    -C            - JMP              TRAP IF X < LOW          1 -   -   AB 1  2  T  -  - - -   - 0 -   -    R2 - T          0 TRAP(4)    -C            - JMP              TRAP IF HI < X          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 247SYS       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          0 BOOT       Z             - JMP              IF IR=0          1 B   -+  ZA 0  0  0  -  - - -   - 0 -   -    R0 - 1 -> R0          0 >1         -Z            - JMP              IF IR<>1          1 -   OR  ZA 0  M  -  -  - - -   S 0 PSH -    M -> STK          1 -   OR  ZA 0  P  -  -  - - -   S 0 PSH -    P -> STK          0 DUMP       T             - JSR              DUMP          1 B   OR  DZ 0  -  P  -  - - -   S 0 POP -    STK -> R3          1 B   OR  DZ 0  -  M  -  - - -   S 0 POP -    STK -> R0          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP>1        1 B   -+  ZA 0  0  0  -  - - -   - 0 -   -    R0 - 1 -> R0          0 >2         -Z            - JMP              IF IR<>2          1 -   OR  ZA 0  T  -  -  - - -   S 0 PSH -    T -> STK          1 B   OR  ZA 0  P  T  -  - - -   - 0 -   -    P -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP>2        1 B   -+  ZA 0  0  0  -  - - -   - 0 -   -    R0 - 1 -> R0          0 >3         -Z            - JMP              IF IR<>3          1 B   -+  DA 1  T  H  -  - - -   - 1 30       T - 30 -> H          1 B   OR  DZ 0  -  0  -  - - -   - 1 5        5 -> R0          1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 -   +   AB 0  0  P  -  - - -   - 0 MAR ALU  R0 + P -> MAR           1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP>3        1 B   -+  ZA 0  0  0  -  - - -   - 0 -   -    R0 - 1 -> R0          0 >4         -Z            - JMP              IF IR<>4          1 Q   +   DA 0  H  -  -  - - -   - 1 30       H + 30 -> Q          1 B*  OR  ZQ 0  T  T  -  - - -   S 0 PSH -    T -> STK, Q -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 250ENTP      1 B   OR  DZ 0  -  1  -  - - -   - 0 ALU IR   IR -> R1          1 -   -+  DA 1  1  -  -  - - -   - 1 20       R1 - 16          0 ENTP1      Z             - JMP              IF R1 = 16          1 -   OR  ZA 0  1  -  -  - - -   - 0 SR  ALU  R1 -> SR          1 B   OR  DZ 0  -  1  MR - - -   - 1 0        MSK(0,SR) -> R1          1 -   -   AB 1  1  M  -  - - -   - 0 -   -    R1 - M          0 ENTP2      C             - JMP              IF R1 >= M          0 TRAP(2)    T             - JMP              TRAP(2)          ENTP1     1 B   -   AB 0  1  1  -  - - -   - 0 -   -    -1 -> R1ENTP2     1 B   OR  DZ 0  -  0  -  - - -   - 1 3        3 -> R0          1 -   OR  ZA 0  M  -  -  - - -   - 0 MD  ALU  M -> MD          1 -   +   AB 0  0  L  -  - - -   - 0 MAR ALU  R0 + L -> MAR           1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR !DEV.STATUS"          1 B   OR  ZA 0  1  M  -  - - -   - 0 -   -    R1 -> M          1 B   OR  DA 0  1  1  -  - - -   - 0 ALU MD   MD OR R1 -> R1          1 -   OR  ZA 0  1  -  -  - - -   - 0 INM ALU  R1 -> INM          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 251EXP       1 B   OR  DZ 0  -  0  -  - - -   - 1 3        3 -> R0          1 -   +   AB 0  0  L  -  - - -   - 0 MAR ALU  R0 + L -> MAR           1 B   OR  DZ 0  -  M  -  - - -   - 0 ALU MD   MD -> M          1 -   OR  ZA 0  0  -  -  - - -   - 0 MAR ALU  R0 -> MAR !DEV.STATUS"          1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU MD   MD -> R0          1 -   OR  AB 0  0  M  -  - - -   - 0 INM ALU  R0 OR M -> INM          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 252ULSS      1 -   -   DA 1  T  -  -  - - -   S 0 POP -    STK-T          0 #PUSH1    -C             - JMP              IF STK < T          1 B   &   ZQ 0  -  T  -  - - -   - 0 -   -    0 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 253ULEQ      1 -   -   DA 0  T  -  -  - - -   S 0 POP -    STK-T-1          0 #PUSH0     C             - JMP              IF STK > T          1 B   OR  DZ 0  -  T  -  - - -   - 1 1        1 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 254UGTR      1 -   -   DA 0  T  -  -  - - -   S 0 POP -    STK-T-1          0 #PUSH1     C             - JMP              IF STK > T          1 B   &   ZQ 0  -  T  -  - - -   - 0 -   -    0 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 255UGEQ      1 -   -   DA 1  T  -  -  - - -   S 0 POP -    STK-T          0 #PUSH0    -C             - JMP              IF STK < T          1 B   OR  DZ 0  -  T  -  - - -   - 1 1        1 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 256TRA       1 B   OR  DZ 0  -  3  -  - - -   - 0 ALU IR   IR -> R3          1 B   OR  DZ 0  -  2  -  - - -   S 0 POP -    STK -> R2          1 B   OR  ZA 0  T  1  -  - - -   - 0 -   -    T -> R1          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          0 TRANSFER   T             - JMP              TRANSFER(R3,R1,R2).MAP 257RDS       1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0#RDS      1 B   OR  DZ 0  -  1  R 10 - -   - 0 ALU IR   (IR^10) -> R1           1 B   OR  DA 0  1  1  -  - - -   - 0 ALU IR   IR OR R1 -> R1          1 -   OR  ZA 0  1  -  -  - - -   - 0 MD  ALU  R1 -> MD          1 B*  +   ZA 1  T  T  -  - - -   - 0 MAR ALU  T -> MAR, T+1 -> T          1 B   -+  ZA 0  0  0  -  - - -   - 0 -   -    R0-1 -> R0          0 #RDS       -S            - JMP              JMP #RDS IF >= 0          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 260.$T-LODFW     1 Q   OR  ZA 0  T  -  -  - - -   S 0 POP -    T -> Q, STK -> DUMMY.$T+          0 #RESTRSTK  T             - JSR              LOAD EXPR STACK          1 B*  OR  ZQ 0  T  T  -  - - -   S 0 PSH -    T -> STK, Q -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 261LODFD     1 Q   OR  ZA 0  T  -  -  - - -   - 0 -   -    T -> Q          1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          0 #RESTRSTK  T             - JSR              LOAD EXPR STACK          1 B*  OR  ZQ 0  T  T  -  - - -   S 0 PSH -    T -> STK, Q -> T          1 -   OR  ZA 0  1  -  -  - - -   S 0 PSH -    R1 -> STK          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 262STORE     1 B   -+  DA 1  H  0  -  - - -   - 1 21       H - 17 -> R0          1 -   -   AB 1  0  S  -  - - -   - 0 -   -    R0 - S          0 TRAP(3)   -C             - JMP              IF R0 < S          0 #SAVESTK   T             - JSR              STORE EXPR STACK          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 263STOFV     1 Q   OR  ZA 0  T  -  -  - - -   - 0 -   -    T -> Q          1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          1 B   -+  DA 1  H  0  -  - - -   - 1 21       H - 17 -> R0          1 -   -   AB 1  0  S  -  - - -   - 0 -   -    R0 - S          0 TRAP(3)   -C             - JMP              IF R0 < S          0 #SAVESTK   T             - JSR              STORE EXPR STACK          1 -   OR  ZQ 0  -  -  -  - - -   - 0 MD  ALU  Q -> MD          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 264STOT      1 B*  OR  DZ 0  T  T  -  - - -   S 0 MD  ALU  T -> MD, STK -> T          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 -   -   AB 1  S  H  -  - - -   - 0 -   -    S - H          0 TRAP(3)    C             - JMP              TRAP(3) IF S >= H          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 265COPT      1 -   OR  ZA 0  T  -  -  - - -   S 0 PSH -    T -> STK          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 266DECS      1 B   -+  ZA 0  S  S  -  - - -   - 0 -   -    S-1 -> S          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 267PCOP      1 B   OR  DZ 0  -  0  -  - - -   - 0 ALU IR   IR -> R0          1 -   OR  ZA 0  S  -  -  - - -   - 0 MD  ALU  S -> MD          1 -   +   AB 0  0  L  -  - - -   - 0 MAR ALU  R0 + L -> MAR           1 Q   +   AB 0  S  T  -  - - -   - 0 -   -    S + T -> Q          0 TRAP(3)    C             - JMP              IF OVERFLOW          1 -   -   AQ 1  H  -  -  - - -   - 0 -   -    H - Q          0 TRAP(3)   -C             - JMP              IF H < Q          1 B   OR  DZ 0  -  1  -  - - -   S 0 POP -    STK -> R1          1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 PCOP2      Z             - JMP              IF T=0PCOP1     1 B*  +   ZA 1  1  1  -  - - -   - 0 MAR ALU  R1 -> MAR, R1+1 -> R1          1 -   OR  ZQ 0  -  -  -  - - -   - 0 MD  MD   MD -> MD          1 B*  +   ZA 1  S  S  -  - - -   - 0 MAR ALU  S -> MAR, S+1 -> S          1 B   -+  ZA 0  T  T  -  - - -   - 0 -   -    T - 1 -> T          0 PCOP1      -Z            - JMP              IF <> 0PCOP2     1 B   OR  DZ 0  -  T  -  - - -   S 0 POP -    STK -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$.MAP 270UADD      1 B   +   DA 0  T  T  -  - - -   S 0 POP -    T+STK -> T          0 TRAP(7)    C             - JSR              IF OVERFLOW          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 271USUB      1 B   -   DA 1  T  T  -  - - -   S 0 POP -    STK-T -> T          0 TRAP(7)    -C            - JSR              IF OVERFLOW          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 272UMUL      1 Q   OR  DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q          0 #MUL16     T             - JSR              T * Q -> [R2,Q]          1 -   OR  ZA 0  2  -  -  - - -   - 0 -   -    R2          0 TRAP(7)    -Z            - JSR              IF OVERFLOW          1 B   OR  ZQ 0  -  T  -  - - -   - 0 -   -    Q -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 273UDIV      1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 TRAP(7)    Z             - JSR              IF ZERODIVIDE           1 Q   OR  DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q          0 #DIVIDE       T          - JSR              Q DIV T -> Q          1 B   OR  ZQ 0  -  T  -  - - -   - 0 -   -    Q -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 274UMOD      1 -   OR  ZA 0  T  -  -  - - -   - 0 -   -    T          0 TRAP(7)    Z             - JSR              IF ZEROMOD          1 Q   OR  DZ 0  -  -  -  - - -   S 0 POP -    STK -> Q          0 #DIVIDE       T          - JSR              Q MOD T -> R2           1 B   OR  ZA 0  2  T  -  - - -   - 0 -   -    R2 -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 275ROR       1 B*  OR  DZ 0  T  T  -  - - -   S 0 SR  ALU  T -> SR, STK -> T          1 B*  OR  DZ 0  T  T  RR - - -   - 0 ALU ALU  (T^SR) -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 276  SHL(X,N MOD 16)SHL       1 B*  OR  DZ 0  T  0  -  - - -   S 0 SR  ALU  T -> SR, STK -> R0          1 B   -&  DA 0  0  0  MR - - -   - 1 0        _MSK(0,SR) & R0 -> R0          1 -   -   ZA 1  T  -  -  - - -   - 0 SR  ALU  -T -> SR          1 B*  OR  DZ 0  0  T  RR - - -   - 0 ALU ALU  (R0^SR) -> T            1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP.MAP 277  SHR(X,N MOD 16)SHR       1 B*  OR  DZ 0  T  T  -  - - -   S 0 SR  ALU  T -> SR, STK -> T          1 Q   -XR DZ 0  -  -  MR - - -   - 1 0        _M(0,SR) -> Q           1 B*  &   DQ 0  T  T  RR - - -   - 0 ALU ALU  (T^SR) & Q -> T          1 Q   OR  DZ 0  -  -  -  - S JMP - 0 ALU IR4  JMAP$